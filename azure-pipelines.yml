# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'e6239220-ac6c-4e5d-afaa-052a6627d0c0'

  # Web app name
  webAppName: 'latestjavaweb'

  # Environment name
  environmentName: 'latestjavaweb'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

steps:
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonarqube'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=development-project_development-project_dd1ab922-8d91-4755-9570-31e0c988cab5
      sonar.projectName=development-project

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- job: MavenPackageAndPublishArtifacts
  displayName: Maven Package and Publish Artifacts
  pool:
    vmImage: $(vmImageName)

  steps:
  - task: SonarQubeAnalyze@5
    inputs:
      jdkversion: 'JAVA_HOME_17_X64'

  - task: SonarQubePublish@5
    inputs:
      pollingTimeoutSec: '300'

  - task: Maven@3
    displayName: 'Maven Package'
    inputs:
      mavenPomFile: 'MyWebApp/pom.xml'

  - task: CopyFiles@2
    displayName: 'Copy Files to artifact staging directory'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '**/target/*.?(war|jar)'
      TargetFolder: $(Build.ArtifactStagingDirectory)

  - upload: $(Build.ArtifactStagingDirectory)
    artifact: drop
